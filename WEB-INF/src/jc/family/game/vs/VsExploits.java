package jc.family.game.vs;

import java.util.Date;
import jc.family.FamilyAction;
import jc.family.FamilyHomeBean;
import net.joycool.wap.bean.UserBean;
import net.joycool.wap.util.DateUtil;
import net.joycool.wap.util.UserInfoUtil;

public class VsExploits {

	int id;
	int gameId;
	long endTime;
	int fmA;
	int fmB;
	long cTime;
	int score;
	int wager;
	int isWin;

	int userA;
	int userB;

	int userCount;
	String detail;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public int getGameId() {
		return gameId;
	}

	public String getGameName() {
		return VsGameBean.getGameIdName(gameId);
	}

	public void setGameId(int gameId) {
		this.gameId = gameId;
	}

	public long getEndTime() {
		return endTime;
	}

	public String getEndTimeStr() {
		return DateUtil.converDateToBefore(new Date(endTime));
	}

	public void setEndTime(long endTime) {
		this.endTime = endTime;
	}

	public int getFmA() {
		return fmA;
	}

	public void setFmA(int fmA) {
		this.fmA = fmA;
	}

	public String getFmANameWml() {
		FamilyHomeBean fmHome = FamilyAction.getFmByID(fmA);
		if (fmHome == null) {
			return "";
		}
		return fmHome.getFm_nameWml();
	}

	public int getFmB() {
		return fmB;
	}

	public String getFmBNameWml() {
		FamilyHomeBean fmHome = FamilyAction.getFmByID(fmB);
		if (fmHome == null) {
			return "";
		}
		return fmHome.getFm_nameWml();
	}

	public void setFmB(int fmB) {
		this.fmB = fmB;
	}

	/**
	 * 得到对战家族
	 * 
	 * @param fmid
	 * @return
	 */
	public String getFmidNameWml(int fmid) {
		FamilyHomeBean fmHome = FamilyAction.getFmByID(fmid == fmA ? fmB : fmA);
		if (fmHome == null) {
			return "";
		}
		return fmHome.getFm_nameWml();
	}

	public long getcTime() {
		return cTime;
	}

	public String getCTimeStr() {
		return VsAction.sdf1.format(new Date(cTime));
	}

	public void setcTime(long cTime) {
		this.cTime = cTime;
	}

	public int getScore() {
		return score;
	}

	public int getScoreStr(int fmId) {
		if (isWin == 0 && fmA == fmId) {
			return score;
		}
		if (isWin == 1 && fmB == fmId) {
			return score;
		}
		return -score;
	}

	public void setScore(int score) {
		this.score = score;
	}

	public int getWager() {
		return wager;
	}

	public double getWagerDouble() {
		return wager / 10000d;
	}

	public double getWagerStr(int fmId) {
		if (isWin == 2) {
			return getWagerDouble();
		}
		if (isWin == 0 && fmA == fmId) {
			return getWagerDouble() * 1.95;
		}
		if (isWin == 1 && fmB == fmId) {
			return getWagerDouble() * 1.95;
		}
		return -getWagerDouble();
	}

	public void setWager(int wager) {
		this.wager = wager;
	}

	public int getIsWin() {
		return isWin;
	}

	public String getIsWinStr(int fmId) {
		if (isWin == 2) {
			return "平";
		}
		if (isWin == 0 && fmA == fmId) {
			return "胜";
		}
		if (isWin == 1 && fmB == fmId) {
			return "胜";
		}
		return "负";
	}

	public void setIsWin(int isWin) {
		this.isWin = isWin;
	}

	public int getUserA() {
		return userA;
	}

	public String getUserANickNameWml() {
		UserBean userBean = (UserBean) UserInfoUtil.getUser(userA);
		if (userBean == null) {
			return "";
		}
		return userBean.getNickNameWml();
	}

	public void setUserA(int userA) {
		this.userA = userA;
	}

	public int getUserB() {
		return userB;
	}

	public String getUserBNickNameWml() {
		UserBean userBean = (UserBean) UserInfoUtil.getUser(userB);
		if (userBean == null) {
			return "";
		}
		return userBean.getNickNameWml();
	}

	public void setUserB(int userB) {
		this.userB = userB;
	}

	public int getUserCount() {
		return userCount;
	}

	public void setUserCount(int userCount) {
		this.userCount = userCount;
	}

	public String getDetail() {
		return detail;
	}

	public void setDetail(String detail) {
		this.detail = detail;
	}

	public boolean isTime() {
		return endTime + 60 * 60 * 1000 < System.currentTimeMillis();
	}

	public String toString2() {
		if (isWin == 0) {
			return VsGameBean.getGameIdName(gameId) + ":[" + getFmANameWml() + "]战胜[" + getFmBNameWml() + "]赢"
					+ VsAction.numFormat.format(getWagerDouble()) + "亿";
		}
		if (isWin == 1) {
			return VsGameBean.getGameIdName(gameId) + ":[" + getFmBNameWml() + "]战胜[" + getFmANameWml() + "]赢"
					+ VsAction.numFormat.format(getWagerDouble()) + "亿";
		}
		return VsGameBean.getGameIdName(gameId) + ":[" + getFmANameWml() + "]与[" + getFmBNameWml() + "]战平";
	}

	public String toString(int fmId) {
		return getCTimeStr() + "|" + getGameName() + "|" + getIsWinStr(fmId);
	}

}
